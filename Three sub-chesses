#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>
#define ROW 3
#define COL 3

void PlayerMove(char a[ROW][COL], int row, int col)
{
		int x = 0;
		int y = 0;
		printf("\n玩家下棋>>>\n");
		while (1)
		{
			printf("请输入坐标 >:");
			scanf("%d%d", &x, &y);
			if (x >= 1 && x <= 3 && y >= 1 && y <= 3)
			{
				if (a[x - 1][y - 1] == '\0')    //
				{
					a[x - 1][y - 1] = '*';
					system("cls");
					break;
				}
				else
					printf("该位置已被占用，重新输入！\n");
				continue;
			}
			else
				printf("输入有误，重新输入！\n");
			continue;
		}
}

void ComputerMove(char a[ROW][COL], int row,int col)
{
	int i = 0;
	int x = 0;
	int y = 0;
	printf("\n电脑下棋>>>\n");
	while(1)
	{
		for (i = 0; i < 2; i++)
		{
			srand((unsigned int)time(NULL));
			if (x == 0)
			{
				x = rand() % 4;
			}
			else
				y = rand() % 4;
		}
			if (a[x - 1][y - 1] == '\0')
			{
				a[x - 1][y - 1] = 'O';
				system("cls");
				displayboard(a, ROW, COL);
				break;
			}
			else
				continue;
	}
}

int judge(char a[ROW][COL])
{
	int i = 0;
	int j = 0;
	//上下:
	for (i,j = 0; j < 3; j++)
	{
		if (a[i][j] == '*' && a[i + 1][j] == '*' && a[i + 2][j] == '*')
		{
			printf("\n玩家获胜！\n");
			return 0;
		}
		else if (a[i][j] == 'O' && a[i + 1][j] == 'O' && a[i + 2][j] == 'O')
		{
			printf("\n电脑获胜！\n");
			return 0;
		}
	}
	//左右：
	for (i,j = 0; i < 3; i++)
	{
		if (a[i][j] == '*' && a[i][j + 1] == '*' && a[i][j + 2] == '*')
		{
			printf("\n玩家获胜！\n");
			return 0;
		}
		else if (a[i][j] == 'O' && a[i][j + 1] == 'O' && a[i][j + 2] == 'O')
		{
			printf("\n电脑获胜！\n");
			return 0;
		}
	}
	//对角：
	i = 0;
	j = 0;
	if (a[i][j] == '*' && a[i + 1][j + 1] == '*' && a[i + 2][j + 2] == '*')
	{
		printf("\n玩家获胜！\n");
		return 0;
	}
	else if (a[i][j] == 'O' && a[i + 1][j + 1] == 'O' && a[i + 2][j + 2] == 'O')
	{
		printf("\n电脑获胜！\n");
		return 0;
	}
	else if (a[i + 2][j] == '*' && a[i + 1][j + 1] == '*' && a[i][j + 2] == '*')
	{
		printf("\n玩家获胜！\n");
		return 0;
	}
	else if (a[i + 2][j] == 'O' && a[i + 1][j + 1] == 'O' && a[i][j + 2] == 'O')
	{
		printf("\n电脑获胜！\n");
		return 0;
	}
	else
		return 1;
}

int i = 0;
int j = 0;
int ret = 1;

void displayboard(char a[ROW][COL], int row, int col)
{
	int i, j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			printf(" %c  ", a[i][j]);
			if (j < col - 1)
			{
				printf("|");
			}
		}
		if (i < row - 1)
		{
			printf("\n---|---|---\n");
		}
	}
	ret = judge(a);
}

void Initboard()
{
	int i = 0;
	int j = 0;
	char board[ROW][COL] = { 0 };
	for (i = 0; i < ROW; i++)
	{
		for (j = 0; j < COL; j++)
		{
			printf(" %c ", board[i][j]);
			if (j < COL - 1)
			{
				printf(" |");
			}
		}
		if (i < ROW-1)
		{
			printf("\n---|---|---\n");
		}
	}
}

void game()
{
	char a[ROW][COL] = { 0 };
	Initboard();
	while (1)
	{
		PlayerMove(a, ROW, COL);
		displayboard(a, ROW, COL);
		if (ret == 0)
		{
			break;
		}
		ComputerMove(a, ROW, COL);
		if (ret == 0)
		{
			break;
		}
	}
}


void menu()
{again:
	int a = 0;
	printf("\n*********** *三子棋 * *********\n");
	printf("******1.play      0.exit****\n");
	printf("****************************\n");
	printf("请选择>:\n");
	scanf("%d", &a);
	switch (a)
	{
	case 1:game();
		goto again;
	case 0:return;
	default:printf("输入错误！请重新输入！\n");
		goto again;
	}
}

int main()
{
	menu();
	return 0;
}
